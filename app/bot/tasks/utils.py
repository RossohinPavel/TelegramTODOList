"""–ù–∞–±–æ—Ä —É—Ç–∏–ª–∏—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∑–∞–¥–∞—á–∞–º–∏"""
from orm.models import Task


RED_CIRCLE = 'üî¥'
YELLOW_CIRCLE = 'üü°'
WHITE_CIRCLE = '‚ö™Ô∏è'

LIST_MSG = '–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∑–∞–¥–∞—á–∏:'
EMPTY_LIST_MSG = """–í–∞—à —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –ø—É—Å—Ç.\n
–î–æ–±–∞–≤—å—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–¥–∞—á, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ—Ö–æ–¥ –≤ –º–∞–≥–∞–∑–∏–Ω. 
–í –æ–ø–∏—Å–∞–Ω–∏–∏ –∫ –∑–∞–¥–∞—á–µ –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ –∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –≤—Ä–µ–º—è –µ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.\n
–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –∑–∞–¥–∞—á –ø–æ–∑–≤–æ–ª–∏—Ç –≤–∞–º —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏—Ç—å—Å—è –Ω–∞ –≤–∞–∂–Ω–æ–º –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–º –∏ –Ω–µ—á–µ–≥–æ –Ω–µ –∑–∞–±—ã—Ç—å.
"""

async def create_task_name(task: Task) -> str:
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç –∏–º—è –∑–∞–¥–∞—á–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–ø–∏—Å–∫–µ"""
    match task.status:
        case 2: circle = RED_CIRCLE
        case 1: circle = YELLOW_CIRCLE
        case 0 | _: circle = WHITE_CIRCLE
    # –û–±—Ä–µ–∑–∞–µ–º –∏–º—è –∑–∞–¥–∞—á–∏, –µ—Å–ª–∏ –æ–Ω–æ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ
    title = task.title
    if len(title) > 20:
        title = title[:17] + '...'
    return f'{circle} {title}' 


async def get_tasks_text(task: Task) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏"""
    text = await create_task_name(task)
    text += '\n'
    if task.description:
        text += task.description + '\n'
    text += '–ê–∫—Ç—É–∞–ª—å–Ω–æ —Å ' + str(task.actual_on) + '\n'
    text += '–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫ ' + str(task.finish_by)
    return text
